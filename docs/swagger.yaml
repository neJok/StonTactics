definitions:
  domain.ComfirmCodeRequest:
    properties:
      code:
        type: integer
      email:
        maxLength: 256
        minLength: 3
        type: string
      name:
        maxLength: 30
        minLength: 2
        type: string
    required:
    - code
    - email
    - name
    type: object
  domain.ErrorResponse:
    properties:
      message:
        type: string
    type: object
  domain.Folder:
    properties:
      id:
        type: string
      name:
        maxLength: 100
        type: string
      spreadouts:
        items:
          type: string
        type: array
      strategies:
        items:
          type: string
        type: array
    required:
    - name
    type: object
  domain.FolderAddSpreadingRequest:
    properties:
      folder_id:
        type: string
      spreading_id:
        type: string
    required:
    - folder_id
    - spreading_id
    type: object
  domain.FolderAddStrategyRequest:
    properties:
      folder_id:
        type: string
      strategy_id:
        type: string
    required:
    - folder_id
    - strategy_id
    type: object
  domain.FolderCreateRequest:
    properties:
      name:
        maxLength: 100
        type: string
    required:
    - name
    type: object
  domain.LoginRequest:
    properties:
      email:
        maxLength: 100
        minLength: 1
        type: string
      password:
        maxLength: 100
        type: string
    required:
    - email
    - password
    type: object
  domain.PaymentCreateRequest:
    properties:
      days:
        type: integer
      email:
        maxLength: 256
        minLength: 3
        type: string
    required:
    - days
    - email
    type: object
  domain.PaymentCreated:
    properties:
      url:
        type: string
    type: object
  domain.Profile:
    properties:
      avatar_url:
        type: string
      created_at:
        type: string
      id:
        type: string
      name:
        type: string
      pro:
        $ref: '#/definitions/domain.UserPro'
    type: object
  domain.RefreshTokenRequest:
    properties:
      refreshToken:
        type: string
    required:
    - refreshToken
    type: object
  domain.RefreshTokenResponse:
    properties:
      accessToken:
        type: string
      refreshToken:
        type: string
    type: object
  domain.SignUpRequest:
    properties:
      email:
        maxLength: 100
        minLength: 1
        type: string
      password:
        maxLength: 100
        minLength: 8
        type: string
    required:
    - email
    - password
    type: object
  domain.Spreading:
    properties:
      elements:
        items:
          additionalProperties: true
          type: object
        type: array
      id:
        type: string
      map_name:
        maxLength: 100
        minLength: 1
        type: string
      name:
        maxLength: 100
        minLength: 1
        type: string
    required:
    - elements
    - map_name
    - name
    type: object
  domain.SpreadingCreateRequest:
    properties:
      elements:
        items:
          additionalProperties: true
          type: object
        type: array
      map_name:
        maxLength: 100
        minLength: 1
        type: string
      name:
        maxLength: 100
        minLength: 1
        type: string
    required:
    - elements
    - map_name
    - name
    type: object
  domain.SpreadingUpdateRequest:
    properties:
      elements:
        items:
          additionalProperties: true
          type: object
        type: array
      map_name:
        maxLength: 100
        minLength: 1
        type: string
    required:
    - elements
    - map_name
    type: object
  domain.Strategy:
    properties:
      id:
        type: string
      map_name:
        maxLength: 100
        minLength: 1
        type: string
      name:
        maxLength: 100
        minLength: 1
        type: string
      parts:
        additionalProperties: true
        type: object
    required:
    - map_name
    - name
    - parts
    type: object
  domain.StrategyCreateRequest:
    properties:
      map_name:
        maxLength: 100
        minLength: 1
        type: string
      name:
        maxLength: 100
        minLength: 1
        type: string
      parts:
        additionalProperties: true
        type: object
    required:
    - map_name
    - name
    - parts
    type: object
  domain.StrategyUpdateRequest:
    properties:
      map_name:
        maxLength: 100
        minLength: 1
        type: string
      parts:
        additionalProperties: true
        type: object
    required:
    - map_name
    - parts
    type: object
  domain.SuccessResponse:
    properties:
      message:
        type: string
    type: object
  domain.UserPro:
    properties:
      active:
        type: boolean
      until:
        type: string
    type: object
info:
  contact: {}
  title: Ston Tactics
paths:
  /api/folder:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              items:
                $ref: '#/definitions/domain.Folder'
              type: array
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
      security:
      - Bearer: []
      summary: Получить все папки пользователя
      tags:
      - Folder
    post:
      parameters:
      - description: folder
        in: body
        name: folder
        required: true
        schema:
          $ref: '#/definitions/domain.FolderCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
      security:
      - Bearer: []
      summary: Создать папку
      tags:
      - Folder
  /api/folder/spreading:
    put:
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/domain.FolderAddSpreadingRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
      security:
      - Bearer: []
      summary: Добавить раскидку в папку
      tags:
      - Folder
  /api/folder/strategy:
    put:
      parameters:
      - description: request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/domain.FolderAddStrategyRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
      security:
      - Bearer: []
      summary: Добавить стратегию в папку
      tags:
      - Folder
  /api/payment/create/tinkoff:
    post:
      parameters:
      - description: paymentInfo
        in: body
        name: paymentInfo
        required: true
        schema:
          $ref: '#/definitions/domain.PaymentCreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/domain.PaymentCreated'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
      security:
      - Bearer: []
      summary: Создать платеж
      tags:
      - Payment
  /api/profile:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Profile'
      security:
      - Bearer: []
      summary: Получить информацию о пользователе
      tags:
      - User
  /api/spreading:
    get:
      parameters:
      - description: ids
        in: query
        name: ids
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              items:
                $ref: '#/definitions/domain.Spreading'
              type: array
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
      security:
      - Bearer: []
      summary: Получить несколько раскидок
      tags:
      - Spreading
    post:
      parameters:
      - description: spreading
        in: body
        name: spreading
        required: true
        schema:
          $ref: '#/definitions/domain.SpreadingCreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/domain.Spreading'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
      security:
      - Bearer: []
      summary: Создать раскидку
      tags:
      - Spreading
  /api/spreading/{id}:
    get:
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Spreading'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
      security:
      - Bearer: []
      summary: Получить одну раскидку по айди
      tags:
      - Spreading
    put:
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: update
        in: body
        name: update
        required: true
        schema:
          $ref: '#/definitions/domain.SpreadingUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
      security:
      - Bearer: []
      summary: Обновить раскидку
      tags:
      - Spreading
  /api/strategy:
    get:
      parameters:
      - description: ids
        in: query
        name: ids
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              items:
                $ref: '#/definitions/domain.Strategy'
              type: array
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
      security:
      - Bearer: []
      summary: Получить несколько стратегий
      tags:
      - Strategy
    post:
      parameters:
      - description: strategy
        in: body
        name: strategy
        required: true
        schema:
          $ref: '#/definitions/domain.StrategyCreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/domain.StrategyCreateRequest'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
      security:
      - Bearer: []
      summary: Создать стратегию
      tags:
      - Strategy
  /api/strategy/{id}:
    get:
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Strategy'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
      security:
      - Bearer: []
      summary: Получить одну стратегию по айди
      tags:
      - Strategy
    put:
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: update
        in: body
        name: update
        required: true
        schema:
          $ref: '#/definitions/domain.StrategyUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
      security:
      - Bearer: []
      summary: Обновить стратегию
      tags:
      - Strategy
  /login:
    post:
      parameters:
      - description: login request
        in: body
        name: loginRequest
        required: true
        schema:
          $ref: '#/definitions/domain.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.RefreshTokenResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
      security:
      - Bearer: []
      summary: Вход по почте и паролю
      tags:
      - Login
  /refresh:
    post:
      parameters:
      - description: refreshToken
        in: body
        name: refreshToken
        required: true
        schema:
          $ref: '#/definitions/domain.RefreshTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.RefreshTokenResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
      security:
      - Bearer: []
      summary: Обновить токены
      tags:
      - Refresh
  /signup/comfirm:
    post:
      parameters:
      - description: code request
        in: body
        name: codeRequest
        required: true
        schema:
          $ref: '#/definitions/domain.ComfirmCodeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.RefreshTokenResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
      security:
      - Bearer: []
      summary: Подтверждение почты
      tags:
      - Signup
  /signup/register:
    post:
      parameters:
      - description: sign up request
        in: body
        name: signUpRequest
        required: true
        schema:
          $ref: '#/definitions/domain.SignUpRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/domain.ErrorResponse'
      security:
      - Bearer: []
      summary: Регистрация по почте и паролю
      tags:
      - Signup
securityDefinitions:
  Bearer:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
